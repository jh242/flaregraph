!function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r,s=n(1),o=new Uint8Array(16);function a(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}var i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var u=function(t){return"string"==typeof t&&i.test(t)},p=[],c=0;c<256;++c)p.push((c+256).toString(16).substr(1));var l=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(p[t[e+0]]+p[t[e+1]]+p[t[e+2]]+p[t[e+3]]+"-"+p[t[e+4]]+p[t[e+5]]+"-"+p[t[e+6]]+p[t[e+7]]+"-"+p[t[e+8]]+p[t[e+9]]+"-"+p[t[e+10]]+p[t[e+11]]+p[t[e+12]]+p[t[e+13]]+p[t[e+14]]+p[t[e+15]]).toLowerCase();if(!u(n))throw TypeError("Stringified UUID is invalid");return n};var f=function(t,e,n){var r=(t=t||{}).random||(t.rng||a)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){n=n||0;for(var s=0;s<16;++s)e[n+s]=r[s];return e}return l(r)};const d=Object(s.Router)();d.get("/",()=>new Response("The princess is in another castle!")),d.get("/posts",async()=>{const t=await FLAREGRAPH_POSTS.list(),e=[];for(const n of t.keys)e.push(FLAREGRAPH_POSTS.get(n.name));const n=(await Promise.all(e)).map(t=>JSON.parse(t));return new Response(JSON.stringify(n),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},status:200,statusText:"success"})}),d.post("/posts",async t=>{const e=await t.json(),{title:n,username:r,content:s}=e,o=Date.now(),a=f(),i={postId:a,title:n,username:r,content:s,timestamp:o,likes:0};return(t=>t.title&&t.username&&t.content&&t.timestamp)(i)?(await FLAREGRAPH_POSTS.put(a,JSON.stringify(i)),new Response(JSON.stringify(i),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},status:201,statusText:"success"})):new Response(null,{status:400,statusText:"invalid post format"})}),d.post("/post/:postId",async t=>{const e=await t.json(),{postId:n}=t.params,r={...JSON.parse(await FLAREGRAPH_POSTS.get(n)),...e};return await FLAREGRAPH_POSTS.put(n,JSON.stringify(r)),new Response(JSON.stringify(r),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},status:200,statusText:"success"})}),d.post("/post/:postId/comment",async t=>{const{postId:e}=t.params,n=await t.json();let r=JSON.parse(await FLAREGRAPH_POSTS.get(e+"_comments"));return r?r.push(n):r=[n],await FLAREGRAPH_POSTS.put(e+"_comments",JSON.stringify(r)),new Response(JSON.stringify(r),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},status:200,statusText:"success"})}),d.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",t=>{t.respondWith(d.handle(t.request))})},function(t,e){t.exports={Router:({base:t="",routes:e=[]}={})=>({__proto__:new Proxy({},{get:(n,r,s)=>(n,...o)=>e.push([r.toUpperCase(),RegExp(`^${(t+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),o])&&s}),routes:e,async handle(t,...n){let r,s,o=new URL(t.url);for(var[a,i,u]of(t.query=Object.fromEntries(o.searchParams),e))if((a===t.method||"ALL"===a)&&(s=o.pathname.match(i)))for(var p of(t.params=s.groups,u))if(void 0!==(r=await p(t.proxy||t,...n)))return r}})}}]);